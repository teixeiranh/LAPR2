@startuml

left to right direction

skinparam classAttributeIconSize 10
'skinparam linetype ortho
skinparam minClassWidth 100
skinparam classHeaderBackgroundColor LightGray
skinparam classBackgroundColor WhiteSmoke
skinparam classBorderColor DarkSlateGray
skinparam classFontColor automatic
skinparam classFontSize 18
skinparam noteFontSize 20
skinparam titleFontSize 28
skinparam classFontName Corbel
skinparam nodesep 150
skinparam ranksep 200

title Class Diagram: Generating for each vaccination center a daily report

package domain <<Folder>> {

package model <<Folder>> {
class Company  {
  -designation:String
  -authFacade:AuthFacade
  -snsUserStore:SnsUserStore
  ...
  -**vaccinationCenterStore:VaccinationCenterStore**
  -**vaccinationScheduleStore:VaccinationScheduleStore**
  -**vaccinationCenterStatsRecorderRecurringTask:VaccinationCenterStatsRecorderRecurringTask**
  -...
  +getDesignation():String
  +getAuthFacade():AuthFacade
  +**getVaccinationCenterStore():vaccinationCenterStore**
  +**getVaccinationScheduleStore():VaccinationScheduleStore**
  +(...)
}
}

package task <<Folder>> {
class VaccinationCenterStatsRecorderRecurringTask {
    -vaccinationCenterStatsTimer: LocalTime
    -vaccinationCenterStatsRecorderAdapterToUse: String
    -getProperties():Properties
    -parseVaccinationCenterStatsTimer():LocalTime
    -**configureVaccinationCenterStatsRecorder():void**
}

class VaccinationCenterStatsDailyRecorderAdapter < extends TimerTask>  {
    -vaccinationCenterStatsFile: String
    -**run():void**
    -**writeAndAppendToFile():void**
}

class TimerTask < implements Runnable>{
...
}
}

package store <<Folder>> {

class VaccinationScheduleStore {
  -vaccinationScheduleStore:Set<VaccinationSchedule>
  -vaccinationScheduleMapper:VaccinationScheduleMapper
  +existsVaccinationSchedule(VaccinationScheduleDTO):Optional<VaccinationSchedule>
  +createVaccinationSchedule(VaccinationScheduleDTO):VaccinationSchedule
  +addVaccinationSchedule(VaccinationSchedule): boolean
  +existsVaccinationSchedule(long,String):Optional<VaccinationSchedule>
  +**getNumberOfVaccinations(vaccinationCenter):int**
}

class VaccinationCenterStore {
  -communityMassVaccinationCenterMapper:CommunityMassVaccinationCenterMapper
  -healthCareVaccinationCenterMapper:HealthCareVaccinationCenterMapper
  -store:Set<VaccinationCenter>
  +addVaccinationCenter(VaccinationCenter):boolean
  +existsCommunityMassVaccinationCenter(String):boolean
  +getByEmail(String):Optional<VaccinationCenter>
  +getAllDTOByVaccineType(VaccineTypeDTO):List<VaccinationCenterDTO>
  +**getAllVaccinationCenter():VaccinationCenter**
  +(...)
}
}

note as N1
all methods in bold are
required for the implementation
of the US06 rationale.
end note


Company "1" -[#black,bold]-> "1" VaccinationScheduleStore : has >
Company "1" -[#black,bold]-> "1" VaccinationCenterStore : has >
Company "1" -[#black,bold]-> "1" VaccinationCenterStatsRecorderRecurringTask : has a schedule task >

VaccinationCenterStatsRecorderRecurringTask "1" -[#black,bold]-> "1" VaccinationCenterStatsDailyRecorderAdapter : creates task >

TimerTask <|-[#black,bold]r- VaccinationCenterStatsDailyRecorderAdapter

VaccinationCenterStatsDailyRecorderAdapter "1" -[#black,bold]u-> "1" VaccinationCenterStore : consult >
VaccinationCenterStatsDailyRecorderAdapter "1" -[#black,bold]-> "1" VaccinationScheduleStore : consult >


@enduml